[{"id":0,"href":"/curso_MBA/presentacion/","title":"Presentacion","section":"","content":" Presentación # Proyecto I: \u0026ldquo;Modelación basada en agentes de sistemas sociales, ecológicos y socio-ecológicos\u0026rdquo; # La modelación basada en agentes es un paradigma de modelación que ha ganado mucha popularidad en diversas disciplinas como en las ciencias sociales, la ecología y la economía y ha sido central en el desarrollo de las ciencias de la complejidad. Esta aproximación de modelación que se ha hecho muy accesible gracias al crecimiento de la capacidad de cómputo y al rápido y activo desarrollo de herramientas de simulación.\nDada la flexibilidad y amplia gama de aplicabilidad del modelado basado en agentes, esta es una herramienta que facilita y promueve la investigación interdisciplinaria, por lo es una herramienta muy relevante para los estudiantes de matemáticas aplicadas. Este será un curso donde además de adquirir habilidades la modelación computacional se discutirán una gran diversidad de temas en ciencias sociales, ecología y sistemas socio-ecológicos. Asimismo los estudiantes podrán desarrollar sus habilidades en programación, análisis de datos, redacción escrita e investigación a traves del desarrollo de un proyecto de un tema de su elección.\nDinámica del curso # El curso constará de 4 tipos de sesiones:\nSesiones teóricas, en las que el docente expondrá un tema (asincrónicas: videos). Sesiones prácticas, en las que se programarán y analizarán modelos basados en agentes (en NetLogo, python y R) (asincrónicas: videos). En estas sesiones se aprenderán los fundamentos de distintas herramientas para simular modelos basados en agentes. Y se repoducirán los modelos y análisis de artículos discutidos. Sesiones de discusión, en las que se discutirán lecturas (artículos, capítulos de libro) (presenciales). Sesiones de asesoría, en las que se presentarán avances del proyecto y se dará retroalimentación y ayuda (presenciales y virtuales). Habrá un aula virutal de google classroom donde se entregarán actividades y se llevará el registro de calificaciones. Así mismo cada alumno deberá subir el su código de sus tareas y proyecto a un repositorio en linea (e.g., github, gitlab, sourcehut).\nEvaluación # La evaluación consistirá en:\n20% evidencias de lectura (e.g., resumenes, lista de ideas clave y/o preguntas) y participación en las sesiones de discusión. 30% tareas (de la parte teórica y práctica; se entregarán por moodle o github) 50% proyecto final (este consistirá en construir un modelo de agentes, hacer sus análisis y documentación, entregar un reporte escrito y presentarlo) Temario # Introducción al modelado basado en agentes # ¿Qué es el modelado basado en agentes? ¿Qué son los autómatas celulares? Historia del modelado basado en agentes y autómatas celulares Modelos de \u0026ldquo;top-down\u0026rdquo; y modelos \u0026ldquo;bottom-up\u0026rdquo; Modelos de agentes espacialmente explícitos y de redes Conceptos básicos del modelado multiagentes: agentes, reglas de comportamiento, propiedades emergentes Modelos simples vs modelos complicados Construcción de modelos basados en agentes # Conceptos de diseño de los modelos de agentes Herramientas para la simulación basada en agentes: NetLogo, Mesa, Agents.jl, Mason, Gama Platform, Cormas, Repast Implementación de modelos de agentes Documentación de modelos de agentes: protocolos ODD, ODD+D, TRACE, diagramas UML Verificación Análisis de modelos basados en agentes # Modelado basado en patrones Análisis de sensibilidad Validación Experimentación /in silico/ Análisis y visualización de resultados Limitaciones de los modelos basados en agentes Autómatas celulares # El juego de la vida Autómatas celulares en 1D Modelos de percolación Modelos basados en agentes de sistemas sociales # Modelos de segregación Modelos \u0026ldquo;Sugarspace\u0026rdquo; Modelo de polarización en redes sociales Modelos de difusión de información en redes Modelos basados en agentes de sistemas ecológicos # Modelos de dinámicas poblacionales espacialmente explícitos Modelos de movimiento y forrajeo animal Modelos de agentes y algoritmos genéticos Modelos basados en agentes de sistemas socio-ecológicos # Modelo de los arrozales en Bali Modelos de cambio de uso de suelo Modelos de manejo de recursos naturales y la tragedia de los comunes Modelos basados en agentes y sistemas de información geográfica Modelación participativa y juegos serios socio-ecológicos Bibliografía # Wilensky, U., \u0026amp; Rand, W. (2015). An introduction to agent-based modeling: Modeling natural, social, and engineered complex systems with NetLogo. The MIT Press. Railsback, S. F., \u0026amp; Grimm, V. (2019). Agent-based and individual-based modeling: A practical introduction (Second edition). Princeton University Press. Janssen, M. (2020). Introduction to Agent-based modeling: with applications to social, ecological and social-ecological systems. Arizona State University. Crooks, A., Malleson, N., Manley, E., \u0026amp; Heppenstall, A. J. (2019). Agent-based modelling \u0026amp; geographical information systems: A practical primer. SAGE. Abar, S., Theodoropoulos, G. K., Lemarinier, P., \u0026amp; O’Hare, G. M. P. (2017). Agent Based Modelling and Simulation tools: A review of the state-of-art software. Computer Science Review, 24, 13–33. https://doi.org/10.1016/j.cosrev.2017.03.001 Étienne, M. (Ed.). (2014). Companion Modelling: A Participatory Approach to Support Sustainable Development. Springer Netherlands. https://doi.org/10.1007/978-94-017-8557-0 Müller, B., Bohn, F., Dreßler, G., Groeneveld, J., Klassert, C., Martin, R., Schlüter, M., Schulze, J., Weise, H., \u0026amp; Schwarz, N. (2013). Describing human decisions in agent-based models – ODD + D, an extension of the ODD protocol. Environmental Modelling \u0026amp; Software, 48, 37–48. https://doi.org/10.1016/j.envsoft.2013.06.003 Sun, Z., Lorscheid, I., Millington, J. D., Lauf, S., Magliocca, N. R., Groeneveld, J., Balbi, S., Nolzen, H., Müller, B., Schulze, J., \u0026amp; Buchmann, C. M. (2016). Simple or complicated agent-based models? A complicated issue. Environmental Modelling \u0026amp; Software, 86, 56–67. https://doi.org/10.1016/j.envsoft.2016.09.006 Lansing, J. S., Thurner, S., Chung, N. N., Coudurier-Curveur, A., Karakaş, Ç., Fesenmyer, K. A., \u0026amp; Chew, L. Y. (2017). Adaptive self-organization of Bali’s ancient rice terraces. Proceedings of the National Academy of Sciences, 114(25), 6504–6509. https://doi.org/10.1073/pnas.1605369114 Törnberg, P. (2022). How digital media drive affective polarization through partisan sorting. Proceedings of the National Academy of Sciences, 119(42), e2207159119. https://doi.org/10.1073/pnas.2207159119 "},{"id":1,"href":"/curso_MBA/teoria_00/","title":"Teoría 0","section":"","content":" Teoría 0: Primera aproximacion a los modelos basados en agentes # Contenido: 3 videos, 1 modelo y 1 cuestionario\nDuración estimada: 40 minutos Introducción # En esta primera sesión teórica vamos a dar una primera explicación informal e intuitiva sobre los que son los modelos basados en agentes. Luego veremos cómo se ve un modelo basado en agenetes en acción, lo exploraremos y veremos que tipo de cosas nos pueden enseñar.\nIdea intuitiva de los modelos basados en agentes # Exploración de un MBA: Modelo de evacuación # Motivación y explicación # Exploración # Ahora vamos a explorar el modelo de evacuación. Puedes descargar el modelo desde aquí y abrirlo localmente con NetLogo (aquí puedes descargar NetLogo) o puedes explorarlo en directo en tu navegador con la aplicación web que está aquí abajo o puedes abrir la aplicación web en otra pestaña. Nota que la versión web de NetLogo es mucho más lenta que la versión de escritorio por lo que te recomendamos siempre usar la versión de escritorio. Además si estás en el navegador de tu celular el modelo correrá aún más lento.\nReflexiona\nAntes de explorar el modelo planteate tus hipótesis.\n¿Qué crees que pase con el tiempo de evacuación cuando aumentes el parámetro de agresividad (xi)? Explica por qué. ¿Qué crees que pase con el tiempo de evacuación cuando pongas un obstáculo enfrente de la salida? Explica por qué. Uso del modelo\nSelecciona el número de agentes que quieras simular (NUMERO_AGENTES) y la agresividad (xi). Da click en setup para inicializar la simulación. Da click en go para ejecutar la simulación Conclusiones # Cuestionario\nEsta sesión teórica tiene asociado un cuestionario que está disponible en el aula virtual del curso. "},{"id":2,"href":"/curso_MBA/actividad_00/","title":"Actividad 0","section":"","content":" Actividad 0 # Fecha de entrega: 16/08/2024\nForma de entrega: repositorio de github Esta actividad está asociada a la Práctica 0.\nParte 1: Escribe tu nombre # En la primera parte de la actividad debes hacer un modelo de NetLogo con un botón que escriba tu nombre en el mundo.\nAbre un proyecto nuevo de NetLogo. En la pestaña de interfaz crea un botón \u0026ldquo;setup\u0026rdquo; En la pestaña de código agrega el siguiente procedimiento para tu botón setup (este código crea una tortuga creca de la esquina superior izquierda lista para dibujar cuando se mueva): to setup clear-all create-turtles 1 [ setxy -10 10 ;; \u0026lt;-- aquí puedes ajustar la posición inicial de la tortuga set heading 180 ;; \u0026lt;-- esto orienta a la tortuga para que mire hacia abajo pen-down ] end Introduciendo comandos en el Centro de comando (\u0026ldquo;Command center\u0026rdquo; en la pestaña de interfaz) haz que la tortuga se mueva de tal forma que escribas tu nombre. Usa los siguientes comandos:\nforward NUM o fd NUM (avanzar NUM pasos) back NUM o bk NUM (retroceder NUM pasos) right NUM o rt NUM (girar hacia la derecha NUM grados) left NUM o lt NUM (girar hacia la izquierda NUM grados) pen-down o pendown (bajar la pluma para trazar cuando la tortuga se mueve) pen-up o penup (levantar la pluma para dejar de trazar cuando la tortuga se mueve) cuando quieras reiniciar usa el botón \u0026ldquo;setup\u0026rdquo; o llama directamente al procedimiento en el centro de comando escribiendo setup. Por ejemplo el siguiente comando escribe \u0026ldquo;LU\u0026rdquo;:\nask turtles [ fd 10 lt 90 fd 5 penup fd 2 lt 90 fd 10 rt 180 pendown fd 10 lt 90 fd 5 lt 90 fd 10 ] Tips\n1. Construye el comando poco a poco, debes pensar en las intrucciones como si tú fueras la tortuga.\n2. Recuerda que cuando estás en el centro de comandos puedes acceder al comando previo usando la flecha hacia arriba de tu teclado, así ya no tienes que escribir tu comando desde cero. Además si no quieres andar picando el botón \u0026ldquo;setup\u0026rdquo; a cada rato puedes ponder el setup antes de tu comando: setup ask turtles [ INSTRUCCIONES ]. Cuando ya tengas tu comando listo crea un botón en la interfaz que se llame: escribir_nombre y en la pestaña de código agrega un procedimiento con el comando que construiste:\nto escribir_nombre AQUI VAN TUS COMANDOS end A NetLogo no le importan los saltos de línea, así que en la pestaña de código puedes poner cada comando en una línea individual para que sea más legible. Por ejemplo el comando que escribe \u0026ldquo;LU\u0026rdquo; que puse arriba es equivalente al siguiente que es mucho legible en la pestaña de código:\nask turtles [ fd 10 lt 90 fd 5 penup fd 2 lt 90 fd 10 rt 180 pendown fd 10 lt 90 fd 5 lt 90 fd 10 ] Guarda tu archivo como nombre.nlogo y agregálo a la carpeta actividad_00. Parte 2: Dibuja algo cool # En la segunda parte de la actividad debes crear un modelo de NetLogo que dibuje algo combinando los comandos que se ven en la práctica.\nAbre un proyecto nuevo de NetLogo. Crea un botón \u0026ldquo;setup\u0026rdquo; que inicialice tu modelo. En la pestaña de cógido crea el procedimiento setup. Aquí tu puedes crear las condiciones iniciales que tu quieras. Por ejemplo para crear varias tortugas listas para dibujar en posiciones aleatorias podrías usar el siguiente procedimiento: to setup clear-all create-turtles 50 [ setxy random-xcor random-ycor pendown ] end Crea un botón en la interfaz que se llame \u0026ldquo;dibujo\u0026rdquo;. Crea el procedimiento dibujo en la pestaña de código y pon tu código que genere un dibujo. Aquí hay unos ejemplos del tipo de dibujos que se pueden hacer para que te pongas creativo. Puedes buscar \u0026ldquo;turtles graphics programming\u0026rdquo; para buscar más ejemplos. Tip\nPara hacer patrones repetivios usa el comando repeat NUM [ COMANDO ]. Puedes meter un comando repeat dentro de otro para tener patrones interesantes. Guarda tu archivo como dibujo.nlogo y agregálo a la carpeta actividad_00. Entrega # Tu carpeta actividad_00 de esta actividad en el repositorio de github debe incluir:\nel archivo nombre.nlogo con tu ejercicio de la parte 1, y el archivo dibujo.nlogo con tu ejercicio de la parte 2 En el aula virtual solo debes poner el url de tu repositorio de github.\n"}]